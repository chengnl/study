在同步的类里安排独立属性

当你使用synchronized关键字来保护代码块时，你必须通过一个对象的引用作为参数。
通常，你将会使用this关键字来引用执行该方法的对象，但是你也可以使用其他对象引用。
通常情况下，这些对象被创建只有这个目的。比如，你在一个类中有被多个线程共享的两个独立属性。
你必须同步访问每个变量，如果有一个线程访问一个属性和另一个线程在同一时刻访问另一个属性，这是没有问题的。

当你使用synchronized关键字来保护代码块，你使用一个对象作为参数。
JVM可以保证只有一个线程可以访问那个对象保护所有的代码块（请注意，我们总是谈论的对象，而不是类）。

注释：在这个示例中，我们用一个对象来控制vacanciesCinema1属性的访问。
所以，在任意时刻，只有一个线程能修改该属性。用另一个对象来控制 vacanciesCinema2属性的访问。
所以，在任意时刻，只有一个线程能修改这个属性。但是可能有两个线程同时运行，
一个修改 vacancesCinema1属性而另一个修改vacanciesCinema2属性